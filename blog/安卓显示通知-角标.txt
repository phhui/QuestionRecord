简单封装的一个安卓通知类

非安卓出身，封装的只能确保能用，代码优化不在考虑范围。

调用后会直接在通知栏显示 通知，并且应用图标带角标

支持android8.0以上版本，mate30 pro测试过

用法：
Application中NotifyUtil.init(Application.this);

然后在需要弹出通知的地方调用NotifyUtil.notification("通知标题","通知内容");

即可

package com.pq;
import android.app.Notification;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.graphics.Color;
import android.os.Build;
import android.support.v4.app.NotificationCompat;
import android.util.Log;
public class NotifyUtil {
    private static Context act;
    private static int id = 1;
    private static String CHANNEL_ID="1";
    public static void init(Context _act){
        act=_act;
        String channelId =null;
        NotificationManager manager = (NotificationManager) act.getSystemService(Context.NOTIFICATION_SERVICE);//管理类
        if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.O) {
            channelId ="1";
            NotificationChannel channel =new NotificationChannel(channelId,"Channel1", NotificationManager.IMPORTANCE_DEFAULT);
            channel.enableLights(true); //是否在桌面icon右上角展示小红点
            channel.setLightColor(Color.RED); //小红点颜色
            channel.setShowBadge(true); //是否在久按桌面图标时显示此渠道的通知
            manager.createNotificationChannel(channel);
        }
        Log.d("log>>>","通知init");
    }
    public static void notification(String title,String content) {
        NotificationManager mNotificationManager = (NotificationManager) act.getSystemService(Context.NOTIFICATION_SERVICE);
        //点击通知本身会显示ResultActivity
        Intent resultIntent = new Intent(act, MainActivity.class);
        resultIntent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        Notification notification;
        PendingIntent resultPendingIntent =PendingIntent.getActivity(act,0,resultIntent,PendingIntent.FLAG_UPDATE_CURRENT);
        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            NotificationChannel mChannel = new NotificationChannel(CHANNEL_ID, "Channel1", NotificationManager.IMPORTANCE_LOW);
            mNotificationManager.createNotificationChannel(mChannel);
            notification = new Notification.Builder(act)
                    .setChannelId(CHANNEL_ID)
                    .setContentTitle(title)
                    .setContentIntent(resultPendingIntent)
                    .setContentText(content)
                    .setSmallIcon(R.drawable.icon).build();
        } else {
            mNotificationManager = (NotificationManager) act.getSystemService(Context.NOTIFICATION_SERVICE);
            //构造Builder对象
            NotificationCompat.Builder builder = new NotificationCompat.Builder(act)
                    .setSmallIcon(R.drawable.icon)
                    .setContentTitle(title)
                    .setContentText(content)
                    .setDefaults(Notification.DEFAULT_ALL)//全部
//                    .setDefaults(Notification.DEFAULT_LIGHTS)//闪光灯
//                    .setDefaults(Notification.DEFAULT_VIBRATE)//震动
//                    .setDefaults(Notification.DEFAULT_SOUND)//声音
            ; // requires VIBRATE permission  消息提醒设置
            notification = builder.build();
            builder.setContentIntent(resultPendingIntent);
        }
        mNotificationManager.notify(1, notification);

    }
}